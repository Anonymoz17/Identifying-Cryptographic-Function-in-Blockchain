name: CI

on:
  push:
    branches: [main, auditor-preprocessing]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt
        shell: bash

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip;
          python -m pip install -r requirements.txt;
          python -m pip install -r requirements-dev.txt;
        shell: powershell

      - name: Lint (ruff)
        run: ruff check .

      - name: Check import/order (isort)
        run: isort --check-only --diff .

      - name: Check formatting (black)
        run: black --check .

      - name: Run tests
        run: pytest -q

  yara-integration:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: ${{ always() }}
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt
        shell: bash

      - name: Install yara-python
        run: |
          python -m pip install --upgrade pip
          python -m pip install yara-python
        shell: bash

      - name: Run YARA integration tests
        run: pytest -q tests/test_yara_integration_optional.py
